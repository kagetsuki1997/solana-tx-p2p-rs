nameOverride: ~
fullnameOverride: ~

# Kubernetes config
clusterDomain: cluster.local

# application config
logFormat: ~
logLevel: ~
postgres:
  host: ~
  port: 5432
  user: ~
  password: ~
  database: zta-iam
keycloak:
  endpoint: ~
  realm: ~
  clientId: zta_iam_service_account
  clientSecret: ~
  clientSecretMap: ~
  authPublicKey: ~
tlsCert: ~
tlsKey: ~
tlsCa: ~
clientPublicKeyMap: ~
applicationPrivateKey: ~
cardIdp:
  endpoint: ~
  name: ~
  clientId: ~
  clientSecret: ~
  authPublicKey: ~

# ingress
ingress:
  enabled: false
  domain: ~
  tls:
    minProtocolVersion: TLS_AUTO
    certificate:
      issuerRef:
        group: cert-manager.io
        kind: ClusterIssuer
        name: letsencrypt-staging

# deployment
replicas: 1
strategy: ~

# deployment/pod
podAnnotations: ~
podLabels: ~
imagePullSecrets: ~
priorityClassName: ~
podSecurityContext:
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault
nodeSelector: ~
affinity: ~
tolerations: ~
topologySpreadConstraints: ~

# deployment/pod/container
image:
  registry: 442277771319.dkr.ecr.us-west-1.amazonaws.com
  repository: zta-iam
  tag: ~
  pullPolicy: Always
startupProbe: ~
livenessProbe: ~
readinessProbe: ~
resources:
  requests:
    cpu: 100m
    memory: 200Mi
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true

# service
service:
  annotations: ~
  labels: ~
  type: ClusterIP

# service account
serviceAccount:
  annotations: ~
  labels: ~
  # will use existing service account if name is specified
  name: ~

# hpa
autoscaling:
  enabled: false
  annotations: ~
  labels: ~
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# certificate
certificate:
  # will use existing issuer if issuerRef is specified
  issuerRef: ~
